{"version":3,"file":"static/js/511.fcd255fb.chunk.js","mappings":"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","sources":["webpack://pet-store/./src/components/UserFolder/UserInfo/UserPasswordChange.module.scss?e1fb","webpack://pet-store/./src/components/UserFolder/UserInfo/UserInfo.module.scss?898d","components/UserFolder/UserInfo/UserPasswordChange.jsx","components/UserFolder/UserInfo/UserPersonalInfo.jsx","components/UserFolder/UserInfo/UserInfo.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"UserPasswordChange_button__kUWX4\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"UserInfo_title__uTBYz\",\"form\":\"UserInfo_form__7GwCl\",\"passwordInp\":\"UserInfo_passwordInp__QTtOk\",\"passwordCont\":\"UserInfo_passwordCont__84+cL\",\"lblFroInput\":\"UserInfo_lblFroInput__5peZO\",\"inputElem\":\"UserInfo_inputElem__wcont\",\"errorMess\":\"UserInfo_errorMess__HVG+0\",\"errInp\":\"UserInfo_errInp__pHOd7\",\"input__wrapper\":\"UserInfo_input__wrapper__vNxz2\",\"label\":\"UserInfo_label__gz-qg\",\"input\":\"UserInfo_input__dIckS\",\"invalid\":\"UserInfo_invalid__selQx\",\"error\":\"UserInfo_error__t8yqL\",\"forgot_password\":\"UserInfo_forgot_password__+TAhB\",\"button\":\"UserInfo_button__2pym4\",\"item__btn\":\"UserInfo_item__btn__o0GNj\",\"list__btn\":\"UserInfo_list__btn__tGI4k\",\"btn__icon\":\"UserInfo_btn__icon__8KaPY\",\"iconPassword\":\"UserInfo_iconPassword__DlF6h\"};","import { useState } from \"react\";\r\nimport styles from \"./UserPasswordChange.module.scss\";\r\nimport css from \"./UserInfo.module.scss\";\r\n\r\nimport { FaRegEye, FaRegEyeSlash } from \"react-icons/fa\";\r\nimport { useFormik } from \"formik\";\r\nimport { schemaUserPassword } from \"../../../helpers/schemes\";\r\nimport { getUser, useUserActions } from \"../../../helpers/user.actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction UserPasswordChange() {\r\n  const [showPassMenu, setShowPassMenu] = useState(false);\r\n  const [passwordShow, setPasswordShow] = useState(false);\r\n  const [showOldPass, setShowOldPass] = useState(false);\r\n  const [confirmPasswordShow, setConfirmPasswordShow] = useState(false);\r\n  const { editPassword } = useUserActions();\r\n  const { email } = getUser();\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    handleSubmit,\r\n    handleReset,\r\n    handleChange,\r\n    touched,\r\n    handleBlur,\r\n  } = useFormik({\r\n    initialValues: {\r\n      oldPassword: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n    },\r\n    validationSchema: schemaUserPassword,\r\n    onSubmit: function (e) {\r\n      if (values.password === values.oldPassword)\r\n        throw new Error(\"New password must be different from old\");\r\n      if (values.password === values.confirm)\r\n        toast.promise(\r\n          editPassword({\r\n            email,\r\n            currentPassword: values.oldPassword,\r\n            newPassword: values.password,\r\n          }),\r\n          {\r\n            pending: \"Password changing in progress\",\r\n            success: \"Password was changed\",\r\n            error: \"Password not change, try again\",\r\n          }\r\n        );\r\n      handleCancel();\r\n    },\r\n  });\r\n\r\n  function handleCancel() {\r\n    setShowPassMenu(false);\r\n    handleReset();\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className={css.form}>\r\n      {!showPassMenu ? (\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => setShowPassMenu((e) => !e)}\r\n        >\r\n          Change Password\r\n        </button>\r\n      ) : (\r\n        <>\r\n          <label className={css.lblFroInput} htmlFor=\"passwordInpOld\">\r\n            Old password\r\n          </label>\r\n          {errors.oldPassword && touched.oldPassword ? (\r\n            <p className={css.errorMess}>{errors.oldPassword}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className={css.passwordCont}>\r\n            <input\r\n              onChange={handleChange}\r\n              id=\"passwordInpOld\"\r\n              onBlur={handleBlur}\r\n              className={\r\n                css.inputElem +\r\n                \" \" +\r\n                css.passwordInp +\r\n                \" \" +\r\n                `${errors.password ? css.errInp : \"\"}`\r\n              }\r\n              name=\"oldPassword\"\r\n              value={values.oldPassword}\r\n              type={showOldPass ? \"text\" : \"password\"}\r\n              required\r\n            />\r\n            <i onClick={() => setShowOldPass((st) => !st)}>\r\n              {!showOldPass ? (\r\n                <FaRegEye size={28} />\r\n              ) : (\r\n                <FaRegEyeSlash size={28} />\r\n              )}\r\n            </i>\r\n          </div>\r\n          <label className={css.lblFroInput} htmlFor=\"passwordInp\">\r\n            New password\r\n          </label>\r\n          {errors.password && touched.password ? (\r\n            <p className={css.errorMess}>{errors.password}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className={css.passwordCont}>\r\n            <input\r\n              onChange={handleChange}\r\n              id=\"passwordInp\"\r\n              onBlur={handleBlur}\r\n              className={\r\n                css.inputElem +\r\n                \" \" +\r\n                css.passwordInp +\r\n                \" \" +\r\n                `${errors.password ? css.errInp : \"\"}`\r\n              }\r\n              name=\"password\"\r\n              value={values.password}\r\n              type={passwordShow ? \"text\" : \"password\"}\r\n              required\r\n            />\r\n            <i onClick={() => setPasswordShow((st) => !st)}>\r\n              {!passwordShow ? (\r\n                <FaRegEye size={28} />\r\n              ) : (\r\n                <FaRegEyeSlash size={28} />\r\n              )}\r\n            </i>\r\n          </div>\r\n          <label className={css.lblFroInput} htmlFor=\"passwordInpConf\">\r\n            Confirm new password\r\n          </label>\r\n          {errors.confirm && touched.confirm ? (\r\n            <p className={css.errorMess}>{errors.confirm}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className={css.passwordCont}>\r\n            <input\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              name=\"confirm\"\r\n              className={css.inputElem + ` ${errors.confirm ? css.errInp : \"\"}`}\r\n              id=\"passwordInpConf\"\r\n              type={confirmPasswordShow ? \"text\" : \"password\"}\r\n              value={values.confirm}\r\n              required\r\n            />\r\n            <i onClick={() => setConfirmPasswordShow((st) => !st)}>\r\n              {!confirmPasswordShow ? (\r\n                <FaRegEye size={28} />\r\n              ) : (\r\n                <FaRegEyeSlash size={28} />\r\n              )}\r\n            </i>\r\n          </div>\r\n          <ul className={css.list__btn}>\r\n            <li className={css.item__btn}>\r\n              <button type=\"submit\" className={css.button}>\r\n                Confirm\r\n              </button>\r\n            </li>\r\n            <li className={css.item__btn}>\r\n              <button\r\n                type=\"button\"\r\n                className={css.button}\r\n                onClick={handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UserPasswordChange;\r\n","import css from \"./UserInfo.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { GoPencil } from \"react-icons/go\";\r\nimport { useFormik } from \"formik\";\r\nimport { schemaUserPersonalInfoNew } from \"../../../helpers/schemes\";\r\nimport { getUser, useUserActions } from \"../../../helpers/user.actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const UserPersonalInfo = () => {\r\n  const [disabled, setDisabled] = useState(true);\r\n  const { editProfile } = useUserActions();\r\n  const user = getUser();\r\n\r\n  const { values, errors, handleChange, handleSubmit, handleReset } = useFormik(\r\n    {\r\n      initialValues: {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n      },\r\n      validationSchema: schemaUserPersonalInfoNew,\r\n      onSubmit: function (e) {\r\n        try {\r\n          console.log(e, \"SUBMIT\");\r\n          toast.promise(\r\n            editProfile(\r\n              {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n              },\r\n              {\r\n                ...user,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n              }\r\n            ),\r\n            {\r\n              pending: \"Personal information changing in progress\",\r\n              success: \"Personal information was changed\",\r\n              error: \"Personal information not changed, try again\",\r\n            }\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        } finally {\r\n          toggleDisabled();\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const toggleDisabled = () => {\r\n    setDisabled(!disabled);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    handleReset();\r\n    toggleDisabled();\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className={css.title}>Personal information</h3>\r\n\r\n      <form className={css.form} onSubmit={handleSubmit}>\r\n        <label className={css.lblFroInput} htmlFor=\"firstNameInp\">\r\n          First Name\r\n        </label>\r\n        {errors.firstName && (\r\n          <p className={css.errorMess}>{errors.firstName}</p>\r\n        )}\r\n        <input\r\n          className={css.inputElem + ` ${errors.firstName ? css.errInp : \"\"}`}\r\n          id=\"firstNameInp\"\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          disabled={disabled}\r\n          value={values.firstName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <label className={css.lblFroInput} htmlFor=\"lstNameInp\">\r\n          Surname\r\n        </label>\r\n        {errors.lastName && <p className={css.errorMess}>{errors.lastName}</p>}\r\n\r\n        <input\r\n          id=\"lstNameInp\"\r\n          className={css.inputElem + ` ${errors.lastName ? css.errInp : \"\"}`}\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          value={values.lastName}\r\n          disabled={disabled}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label className={css.lblFroInput} htmlFor=\"emailInp\">\r\n          E-mail\r\n        </label>\r\n        {errors.email && <p className={css.errorMess}>{errors.email}</p>}\r\n\r\n        <input\r\n          id=\"emailInp\"\r\n          className={css.inputElem + ` ${errors.email ? css.errInp : \"\"}`}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={values.email}\r\n          disabled={true}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        {disabled ? (\r\n          <button type=\"button\" onClick={toggleDisabled} className={css.button}>\r\n            Edit\r\n            <GoPencil size={20} className={css.btn__icon} />\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <ul className={css.list__btn}>\r\n              <li className={css.item__btn}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  Confirm\r\n                </button>\r\n              </li>\r\n              <li className={css.item__btn}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleCancel()}\r\n                  className={css.button}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import UserPasswordChange from \"./UserPasswordChange\";\r\nimport { UserPersonalInfo } from \"./UserPersonalInfo\";\r\n\r\nconst UserInfo = () => {\r\n  return (\r\n    <>\r\n      <UserPersonalInfo />\r\n      <UserPasswordChange />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","showPassMenu","setShowPassMenu","_useState3","_useState4","passwordShow","setPasswordShow","_useState5","_useState6","showOldPass","setShowOldPass","_useState7","_useState8","confirmPasswordShow","setConfirmPasswordShow","editPassword","useUserActions","email","getUser","_useFormik","useFormik","initialValues","oldPassword","password","confirm","validationSchema","schemaUserPassword","onSubmit","e","values","Error","toast","promise","currentPassword","newPassword","pending","success","error","handleCancel","errors","handleSubmit","handleReset","handleChange","touched","handleBlur","_jsx","className","css","children","_jsxs","_Fragment","htmlFor","onChange","id","onBlur","concat","name","value","type","required","onClick","st","FaRegEyeSlash","size","FaRegEye","styles","UserPersonalInfo","disabled","setDisabled","editProfile","user","firstName","lastName","schemaUserPersonalInfoNew","console","log","_objectSpread","toggleDisabled","GoPencil","UserPasswordChange"],"sourceRoot":""}