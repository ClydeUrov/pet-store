{"version":3,"file":"static/js/180.45ddb186.chunk.js","mappings":"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","sources":["webpack://pet-store/./src/components/AdminFolder/AdminProfile/AdminProfile.module.scss?e01b","components/AdminFolder/AdminProfile/AdminProfile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"productContainer\":\"AdminProfile_productContainer__788LY\",\"formContainer\":\"AdminProfile_formContainer__L0+Fg\",\"firstLine\":\"AdminProfile_firstLine__gPC1c\",\"form\":\"AdminProfile_form__EAV6D\",\"button\":\"AdminProfile_button__GRCjc\"};","import { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport css from \"./AdminProfile.module.scss\";\r\nimport FormikField from \"../../FormikFolder/FormikField\";\r\nimport { schemaUserPersonalInfo } from \"../../../helpers/schemes\";\r\nimport { GoPencil } from \"react-icons/go\";\r\n\r\nconst AdminProfile = () => {\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const toggleDisabled = () => {\r\n    setDisabled(!disabled);\r\n  };\r\n\r\n  const handleCancel = (props) => {\r\n    props.handleReset();\r\n    toggleDisabled();\r\n    return;\r\n  };\r\n\r\n  const handleEditEnable = (props) => {\r\n    toggleDisabled();\r\n    props.setFieldValue('editEnabled', true);\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    if (formData.editEnabled) {\r\n      const userInfo = {\r\n        name: formData.name,\r\n        surname: formData.surname,\r\n        email: formData.email,\r\n      };\r\n      console.log(\"User Info\", userInfo);\r\n    } else {\r\n      const passwordInfo = {\r\n        password: formData.password,\r\n        confirm: formData.confirm,\r\n      };\r\n      console.log(\"Password Info\", passwordInfo);\r\n    }\r\n\r\n    toggleDisabled();\r\n    // props.setFieldValue('editEnabled', false);\r\n  };\r\n\r\n  return (\r\n    <div className={css.productContainer}>\r\n      <div className={css.firstLine}>\r\n        <p>Admin information</p>\r\n      </div>\r\n      <div className={css.formContainer}>\r\n      <Formik\r\n        validationSchema={schemaUserPersonalInfo}\r\n        initialValues={{\r\n          surname: \"Olivi\",\r\n          email: \"oliviarhye@gmail.com\",\r\n          name: \"aArhye\",\r\n          editEnabled: false,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <Form className={css.form}>\r\n            <FormikField\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              width=\"276px\"\r\n              value={props.values.name}\r\n              disabled={disabled}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"surname\"\r\n              type=\"text\"\r\n              label=\"Surname\"\r\n              width=\"276px\"\r\n              value={props.values.surname}\r\n              disabled={disabled}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"email\"\r\n              type=\"unstyled\"\r\n              label=\"E-mail\"\r\n              width=\"276px\"\r\n              value={props.values.email}\r\n              disabled={disabled}\r\n              required\r\n            />\r\n            {disabled ? (\r\n              <button type=\"button\" onClick={() => handleEditEnable(props)} className={css.button}>\r\n                Edit\r\n                <GoPencil size={20} className={css.btn__icon} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.editForm}>\r\n                <ul className={css.list__btn}>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"submit\" className={css.button} disabled={props.isSubmitting}>\r\n                      Confirm\r\n                    </button>\r\n                  </li>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"button\" onClick={() => handleCancel(props)} className={css.button}>\r\n                      Cancel\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}            \r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Formik\r\n        validationSchema={schemaUserPersonalInfo}\r\n        initialValues={{\r\n          password: \"12345678\",\r\n          confirm: \"12345678\",\r\n          editEnabled: false,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <Form className={css.form}>\r\n            <h3 style={{marginBottom:\"20px\"}}>Your password</h3>\r\n            <FormikField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              width=\"276px\"\r\n              value={props.values.password}\r\n              disabled={disabled}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"confirm\"\r\n              type=\"password\"\r\n              label=\"Confirm password\"\r\n              width=\"276px\"\r\n              value={props.values.confirm}\r\n              disabled={disabled}\r\n              required\r\n            />\r\n\r\n            {disabled ? (\r\n              <button type=\"button\" onClick={() => handleEditEnable(props)} className={css.button}>\r\n                Edit\r\n                <GoPencil size={20} className={css.btn__icon} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.editForm}>\r\n                <ul className={css.list__btn}>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"submit\" className={css.button} disabled={props.isSubmitting}>\r\n                      Confirm\r\n                    </button>\r\n                  </li>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"button\" onClick={() => handleCancel(props)} className={css.button}>\r\n                      Cancel\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;"],"names":["_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","toggleDisabled","handleCancel","props","handleReset","handleEditEnable","setFieldValue","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","userInfo","passwordInfo","wrap","_context","prev","next","editEnabled","name","surname","email","console","log","password","confirm","stop","_x","apply","arguments","_jsxs","className","css","productContainer","children","_jsx","firstLine","formContainer","Formik","validationSchema","schemaUserPersonalInfo","initialValues","onSubmit","Form","form","FormikField","type","label","width","value","values","required","onClick","button","GoPencil","size","btn__icon","editForm","list__btn","item__btn","isSubmitting","style","marginBottom"],"sourceRoot":""}