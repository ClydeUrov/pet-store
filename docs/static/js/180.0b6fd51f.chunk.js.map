{"version":3,"file":"static/js/180.0b6fd51f.chunk.js","mappings":"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","sources":["webpack://pet-store/./src/components/AdminFolder/AdminProfile/AdminProfile.module.scss?e01b","components/AdminFolder/AdminProfile/AdminProfile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"productContainer\":\"AdminProfile_productContainer__788LY\",\"firstLine\":\"AdminProfile_firstLine__gPC1c\",\"form\":\"AdminProfile_form__EAV6D\",\"button\":\"AdminProfile_button__GRCjc\"};","import { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport css from \"./AdminProfile.module.scss\";\r\nimport FormikField from \"../../FormikFolder/FormikField\";\r\nimport { schemaUserPersonalInfo } from \"../../../helpers/schemes\";\r\nimport { GoPencil } from \"react-icons/go\";\r\n\r\nconst AdminProfile = () => {\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [disabledBtn, setDisabledBtn] = useState(false);\r\n  const [passwordShow, setPasswordShow] = useState(false);\r\n\r\n  const toggleDisabled = () => {\r\n    setDisabled(!disabled);\r\n  };\r\n  const togglePassword = () => {\r\n    setPasswordShow(!passwordShow);\r\n  };\r\n\r\n  // const toggleDisabled = () => {\r\n  //   setDisabled((prevDisabled) => !prevDisabled);\r\n  //   // Reset disabledBtn when toggling disabled\r\n  //   setDisabledBtn(true);\r\n  // };\r\n\r\n  // const togglePassword = () => {\r\n  //   setPasswordShow((prevPasswordShow) => !prevPasswordShow);\r\n  // };\r\n\r\n  const handleBtnDisable = (e) => {\r\n    setDisabledBtn(true);\r\n  };\r\n\r\n  const handleBtnEnable = (e) => {\r\n    setDisabledBtn(false);\r\n  };\r\n\r\n  const handleCancel = (props) => {\r\n    props.handleReset();\r\n    toggleDisabled();\r\n    handleBtnDisable();\r\n    return;\r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    const newInfo = {\r\n      name: formData.name,\r\n      surname: formData.surname,\r\n      email: formData.email,\r\n      password: formData.password,\r\n      confirm: formData.confirm,\r\n    };\r\n    console.log(\"newInfo\", newInfo);\r\n    toggleDisabled();\r\n    handleBtnDisable();\r\n    // dispatch(addNewUser(newUser));\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className={css.productContainer}>\r\n      <div className={css.firstLine}>\r\n        <p>Admin information</p>\r\n      </div>\r\n      <Formik\r\n        validationSchema={schemaUserPersonalInfo}\r\n        initialValues={{\r\n          surname: \"Olivi\",\r\n          email: \"oliviarhye@gmail.com\",\r\n          name: \"aArhye\",\r\n          password: \"12345678\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => {\r\n        return (\r\n          <Form className={css.form}>\r\n            <FormikField\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              width=\"276px\"\r\n              value={props.values.name}\r\n              disabled={disabled}\r\n              onClick={handleBtnEnable}\r\n              onTogglePassword={togglePassword}\r\n              required\r\n            />\r\n\r\n            <FormikField\r\n              name=\"email\"\r\n              type=\"unstyled\"\r\n              label=\"E-mail\"\r\n              width=\"276px\"\r\n              value={props.values.email}\r\n              disabled={disabled}\r\n              onClick={handleBtnEnable}\r\n              onTogglePassword={togglePassword}\r\n              required\r\n            />\r\n\r\n            <FormikField\r\n              name=\"surname\"\r\n              type=\"text\"\r\n              label=\"Surname\"\r\n              width=\"276px\"\r\n              value={props.values.surname}\r\n              disabled={disabled}\r\n              onClick={handleBtnEnable}\r\n              onTogglePassword={togglePassword}\r\n              required\r\n            />\r\n\r\n            <FormikField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              width=\"276px\"\r\n              value={props.values.password}\r\n              disabled={disabled}\r\n              onClick={handleBtnEnable}\r\n              onTogglePassword={togglePassword}\r\n              required\r\n            />\r\n\r\n            {disabled ? (\r\n              <button type=\"button\" onClick={toggleDisabled} className={css.button}>\r\n                Edit\r\n                <GoPencil size={20} className={css.btn__icon} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.editForm}>\r\n                <ul className={css.list__btn}>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"submit\" className={css.button} disabled={disabledBtn}>\r\n                      Confirm\r\n                    </button>\r\n                  </li>\r\n                  <li className={css.item__btn}>\r\n                    <button type=\"cancel\" onClick={() => handleCancel(props)} className={css.button}>\r\n                      Cancel\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n                <FormikField\r\n                  name=\"confirm\"\r\n                  type=\"password\"\r\n                  label=\"Confirm password\"\r\n                  width=\"276px\"\r\n                  value={props.values.confirm}\r\n                  disabled={disabled}\r\n                  onClick={handleBtnEnable}\r\n                  onTogglePassword={togglePassword}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;"],"names":["_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","_useState3","_useState4","disabledBtn","setDisabledBtn","_useState5","_useState6","passwordShow","setPasswordShow","toggleDisabled","togglePassword","handleBtnDisable","e","handleBtnEnable","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","newInfo","wrap","_context","prev","next","name","surname","email","password","confirm","console","log","abrupt","stop","_x","apply","arguments","_jsxs","className","css","productContainer","children","_jsx","firstLine","Formik","validationSchema","schemaUserPersonalInfo","initialValues","onSubmit","props","Form","form","FormikField","type","label","width","value","values","onClick","onTogglePassword","required","button","GoPencil","size","btn__icon","editForm","list__btn","item__btn","handleReset","handleCancel"],"sourceRoot":""}