{"version":3,"file":"static/js/180.f900dd5b.chunk.js","mappings":"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","sources":["webpack://pet-store/./src/components/AdminFolder/AdminProfile/AdminProfile.module.scss?e01b","components/AdminFolder/AdminProfile/AdminProfile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"productContainer\":\"AdminProfile_productContainer__788LY\",\"formContainer\":\"AdminProfile_formContainer__L0+Fg\",\"firstLine\":\"AdminProfile_firstLine__gPC1c\",\"form\":\"AdminProfile_form__EAV6D\",\"button\":\"AdminProfile_button__GRCjc\",\"submitForm\":\"AdminProfile_submitForm__byOv1\"};","import { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport css from \"./AdminProfile.module.scss\";\r\nimport FormikField from \"../../FormikFolder/FormikField\";\r\nimport { schemaAdminInformation, schemaAdminPassword } from \"../../../helpers/schemes\";\r\nimport { GoPencil } from \"react-icons/go\";\r\n\r\nconst AdminProfile = () => {\r\n  const [editState, setEditState] = useState({\r\n    personalInfo: true,\r\n    passwordInfo: true,\r\n  });\r\n\r\n  const toggleEditState = (formName) => {\r\n    setEditState((prevEditState) => ({\r\n      ...prevEditState,\r\n      [formName]: !prevEditState[formName],\r\n    }));\r\n  };\r\n\r\n  const handleCancel = (form, formName) => {\r\n    form.handleReset();\r\n    toggleEditState(formName);\r\n  };\r\n\r\n  const handleSubmit = async (formData, formName) => {\r\n    if (!editState.personalInfo) {\r\n      const userInfo = {\r\n        name: formData.name,\r\n        surname: formData.surname,\r\n        email: formData.email,\r\n      };\r\n      console.log(userInfo);\r\n    } else {\r\n      const passwordInfo = {\r\n        password: formData.password,\r\n        confirm: formData.confirm,\r\n      };\r\n      console.log(passwordInfo);\r\n    }\r\n\r\n    toggleEditState(formName);\r\n  };\r\n\r\n  return (\r\n    <div className={css.productContainer}>\r\n      <div className={css.firstLine}>\r\n        <p>Admin information</p>\r\n      </div>\r\n      <div className={css.formContainer}>\r\n      <Formik\r\n        validationSchema={schemaAdminInformation}\r\n        initialValues={{\r\n          surname: \"Olivi\",\r\n          email: \"oliviarhye@gmail.com\",\r\n          name: \"aArhye\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(form) => (\r\n          <Form className={css.form}>\r\n            <FormikField\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              width=\"276px\"\r\n              onChange={(e) => {form.handleChange(e)}}\r\n              disabled={editState.personalInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"surname\"\r\n              type=\"text\"\r\n              label=\"Surname\"\r\n              width=\"276px\"\r\n              onChange={(e) => {form.handleChange(e)}}\r\n              disabled={editState.personalInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"email\"\r\n              type=\"text\"\r\n              label=\"E-mail\"\r\n              width=\"276px\"\r\n              onChange={(e) => {form.handleChange(e)}}\r\n              disabled={editState.personalInfo}\r\n              required\r\n            />\r\n            {editState.personalInfo ? (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => toggleEditState('personalInfo')}\r\n                className={css.button}\r\n              >\r\n                Edit <GoPencil size={20} style={{marginLeft: \"5px\"}} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.submitForm}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  Confirm\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleCancel(form, 'personalInfo')}\r\n                  className={css.button}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Formik\r\n        validationSchema={schemaAdminPassword}\r\n        initialValues={{\r\n          password: \"12345678\",\r\n          confirm: \"12345678\",\r\n          editEnabled: false,\r\n        }}\r\n        onSubmit={(values, form) => handleSubmit(values, 'passwordInfo', form)}\r\n      >\r\n        {(form) => (\r\n          <Form className={css.form}>\r\n            <h3 style={{marginBottom:\"20px\"}}>Your password</h3>\r\n            <FormikField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              width=\"276px\"\r\n              value={form.values.password}\r\n              disabled={editState.passwordInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"confirm\"\r\n              type=\"password\"\r\n              label=\"Confirm password\"\r\n              width=\"276px\"\r\n              value={form.values.confirm}\r\n              disabled={editState.passwordInfo}\r\n              required\r\n            />\r\n\r\n            {editState.passwordInfo ? (\r\n              <button \r\n                type=\"button\" \r\n                onClick={() => toggleEditState('passwordInfo')} \r\n                className={css.button}\r\n              >\r\n                Edit\r\n                <GoPencil size={20} style={{marginLeft: \"5px\"}} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.submitForm}>\r\n                <button type=\"submit\" className={css.button} disabled={form.isSubmitting}>\r\n                  Confirm\r\n                </button>\r\n                <button type=\"button\" onClick={() => handleCancel(form, 'passwordInfo')} className={css.button}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;"],"names":["_useState","useState","personalInfo","passwordInfo","_useState2","_slicedToArray","editState","setEditState","toggleEditState","formName","prevEditState","_objectSpread","_defineProperty","handleCancel","form","handleReset","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","userInfo","wrap","_context","prev","next","password","confirm","console","log","name","surname","email","stop","_x","_x2","apply","arguments","_jsxs","className","css","children","_jsx","Formik","validationSchema","schemaAdminInformation","initialValues","onSubmit","Form","FormikField","type","label","width","onChange","e","handleChange","disabled","required","onClick","GoPencil","size","style","marginLeft","schemaAdminPassword","editEnabled","values","marginBottom","value","isSubmitting"],"sourceRoot":""}