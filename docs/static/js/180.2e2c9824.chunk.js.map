{"version":3,"file":"static/js/180.2e2c9824.chunk.js","mappings":"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","sources":["webpack://pet-store/./src/components/AdminFolder/AdminProfile/AdminProfile.module.scss?e01b","components/AdminFolder/AdminProfile/AdminProfile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"productContainer\":\"AdminProfile_productContainer__788LY\",\"formContainer\":\"AdminProfile_formContainer__L0+Fg\",\"firstLine\":\"AdminProfile_firstLine__gPC1c\",\"form\":\"AdminProfile_form__EAV6D\",\"button\":\"AdminProfile_button__GRCjc\",\"submitForm\":\"AdminProfile_submitForm__byOv1\"};","import { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport css from \"./AdminProfile.module.scss\";\r\nimport FormikField from \"../../FormikFolder/FormikField\";\r\nimport { schemaAdminInformation, schemaAdminPassword } from \"../../../helpers/schemes\";\r\nimport { GoPencil } from \"react-icons/go\";\r\nimport { getUser, useUserActions } from \"../../../helpers/user.actions\";\r\n\r\nconst AdminProfile = () => {\r\n  const user = getUser();\r\n  const userAction = useUserActions();\r\n  const [error, setError] = useState('');\r\n  const [editState, setEditState] = useState({\r\n    personalInfo: true,\r\n    passwordInfo: true,\r\n  });\r\n\r\n  const toggleEditState = (formName) => {\r\n    setEditState((prevEditState) => ({\r\n      ...prevEditState,\r\n      [formName]: !prevEditState[formName],\r\n    }));\r\n  };\r\n\r\n  const handleCancel = (form, formName) => {\r\n    form.handleReset();\r\n    toggleEditState(formName);\r\n  };\r\n\r\n  const handleSubmit = async (formData, formName) => {\r\n    if (!editState.personalInfo) {\r\n      const userInfo = {\r\n        name: formData.name,\r\n        surname: formData.surname,\r\n      };\r\n      await userAction\r\n        .editProfile(userInfo)\r\n        .then()\r\n        .catch((e) => {\r\n          e.response ? setError(e.response.data.message) : setError(e.message)\r\n        })\r\n    } else {\r\n      const passwordInfo = {\r\n        password: formData.password,\r\n        confirm: formData.confirm,\r\n      };\r\n      await userAction\r\n        .editPassword(passwordInfo)\r\n        .then()\r\n        .catch((e) => {\r\n          e.response ? setError(e.response.data.message) : setError(e.message)\r\n        })\r\n    }\r\n\r\n    toggleEditState(formName);\r\n  };\r\n\r\n  return (\r\n    <div className={css.productContainer}>\r\n      <div className={css.firstLine}>\r\n        <p>Admin information</p>\r\n      </div>\r\n      <div className={css.formContainer}>\r\n      <Formik\r\n        validationSchema={schemaAdminInformation}\r\n        initialValues={{\r\n          surname: user.lastName,\r\n          email: user.email,\r\n          name: user.firstName,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(form) => (\r\n          <Form className={css.form}>\r\n            <FormikField\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              width=\"276px\"\r\n              onChange={(e) => {form.handleChange(e)}}\r\n              disabled={editState.personalInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"surname\"\r\n              type=\"text\"\r\n              label=\"Surname\"\r\n              width=\"276px\"\r\n              onChange={(e) => {form.handleChange(e)}}\r\n              disabled={editState.personalInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"email\"\r\n              type=\"unstyled\"\r\n              label=\"E-mail\"\r\n              width=\"276px\"\r\n              value={user.email}\r\n            />\r\n            {editState.personalInfo ? (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => toggleEditState('personalInfo')}\r\n                className={css.button}\r\n              >\r\n                Edit <GoPencil size={20} style={{marginLeft: \"5px\"}} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.submitForm}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  Confirm\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleCancel(form, 'personalInfo')}\r\n                  className={css.button}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Formik\r\n        validationSchema={schemaAdminPassword}\r\n        initialValues={{\r\n          password: \"\",\r\n          confirm: \"\",\r\n          editEnabled: false,\r\n        }}\r\n        onSubmit={(values, form) => handleSubmit(values, 'passwordInfo', form)}\r\n      >\r\n        {(form) => (\r\n          <Form className={css.form}>\r\n            <h3 style={{marginBottom:\"20px\"}}>Your password</h3>\r\n            <FormikField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              width=\"276px\"\r\n              value={form.values.password}\r\n              disabled={editState.passwordInfo}\r\n              required\r\n            />\r\n            <FormikField\r\n              name=\"confirm\"\r\n              type=\"password\"\r\n              label=\"Confirm password\"\r\n              width=\"276px\"\r\n              value={form.values.confirm}\r\n              disabled={editState.passwordInfo}\r\n              required\r\n            />\r\n\r\n            {editState.passwordInfo ? (\r\n              <button \r\n                type=\"button\" \r\n                onClick={() => toggleEditState('passwordInfo')} \r\n                className={css.button}\r\n              >\r\n                Edit\r\n                <GoPencil size={20} style={{marginLeft: \"5px\"}} />\r\n              </button>\r\n            ) : (\r\n              <div className={css.submitForm}>\r\n                <button type=\"submit\" className={css.button} disabled={form.isSubmitting}>\r\n                  Confirm\r\n                </button>\r\n                <button type=\"button\" onClick={() => handleCancel(form, 'passwordInfo')} className={css.button}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {error && <p>{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;"],"names":["user","getUser","userAction","useUserActions","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","personalInfo","passwordInfo","_useState4","editState","setEditState","toggleEditState","formName","prevEditState","_objectSpread","_defineProperty","handleCancel","form","handleReset","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","userInfo","wrap","_context","prev","next","name","surname","editProfile","then","catch","e","response","data","message","password","confirm","editPassword","stop","_x","_x2","apply","arguments","_jsxs","className","css","children","_jsx","Formik","validationSchema","schemaAdminInformation","initialValues","lastName","email","firstName","onSubmit","Form","FormikField","type","label","width","onChange","handleChange","disabled","required","value","onClick","GoPencil","size","style","marginLeft","schemaAdminPassword","editEnabled","values","marginBottom","isSubmitting"],"sourceRoot":""}